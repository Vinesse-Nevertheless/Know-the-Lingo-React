{"ast":null,"code":"var _jsxFileName = \"/Users/vanessa/Desktop/Personal React Project/src/QuizQuestion.js\";\n//child component to Quiz.js and QuizQuestionButton\nimport React, { Component } from \"react\";\nimport QuizQuestionButton from \"./QuizQuestionButton.js\";\n/*\nButton Flow 2\n\nThe clickHandler prop in <QuizQuestionButton/> component below is bound the handleClick(buttonText)\nThe binding allows handleClick in QuizQuestionButton.js to pass an argument to clickHandler prop on this page\nand to have handleClick(buttonText) implement logic.\n\nThe logic: if button clicked equals the right answer, go to the method that handles showing the next question.\n\nGo to Quiz.js for part 3.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass QuizQuestion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incorrectAnswer: false\n    };\n  }\n\n  render() {\n    {\n      /* RETURN REQUIRED */\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Know the Lingo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"app\",\n        children: [\" \", this.state.incorrectAnswer ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \" Sorry that's not right \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"question-text\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.props.quiz_question.instruction_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"buttons answer-section\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [this.props.quiz_question.answer_options.map((answer_option, index //creates a new anonymous function (that's the => part) that receives answer_option & index as a parameter and will return a value of the modified data.\n            ) => /*#__PURE__*/_jsxDEV(QuizQuestionButton, {\n              button_text: answer_option,\n              clickHandler: this.handleClick.bind(this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n  handleClick(buttonText) {\n    if (buttonText == this.props.quiz_question.answer) {\n      this.setState({\n        incorrectAnswer: false\n      });\n      this.props.showNextQuestionHandler();\n    } else {\n      this.setState({\n        incorrectAnswer: true\n      });\n    }\n  }\n\n}\n\nexport default QuizQuestion;","map":{"version":3,"sources":["/Users/vanessa/Desktop/Personal React Project/src/QuizQuestion.js"],"names":["React","Component","QuizQuestionButton","QuizQuestion","constructor","props","state","incorrectAnswer","render","quiz_question","instruction_text","answer_options","map","answer_option","index","handleClick","bind","buttonText","answer","setState","showNextQuestionHandler"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP;AACE;AACD;AACD,wBACE;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA,mBACG,GADH,EAGG,KAAKF,KAAL,CAAWC,eAAX,gBACC;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAEG,IALN,eAME;AAAS,UAAA,SAAS,EAAC,eAAnB;AAAA,iCACE;AAAA,sBAAI,KAAKF,KAAL,CAAWI,aAAX,CAAyBC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAS,UAAA,SAAS,EAAC,wBAAnB;AAAA,iCACE;AAAA,uBAOG,KAAKL,KAAL,CAAWI,aAAX,CAAyBE,cAAzB,CAAwCC,GAAxC,CACC,CACEC,aADF,EAEEC,KAFF,CAEQ;AAFR,8BAIE,QAAC,kBAAD;AAEE,cAAA,WAAW,EAAED,aAFf;AAGE,cAAA,YAAY,EAAE,KAAKE,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AAHhB,eACOF,KADP;AAAA;AAAA;AAAA;AAAA,oBALH,CAPH,EAkBK,GAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADF;AAsCD;;AACDC,EAAAA,WAAW,CAACE,UAAD,EAAa;AACtB,QAAIA,UAAU,IAAI,KAAKZ,KAAL,CAAWI,aAAX,CAAyBS,MAA3C,EAAmD;AACjD,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACA,WAAKF,KAAL,CAAWe,uBAAX;AACD,KAHD,MAGO;AACL,WAAKD,QAAL,CAAc;AAAEZ,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD;AACF;;AAzDkC;;AA4DrC,eAAeJ,YAAf","sourcesContent":["//child component to Quiz.js and QuizQuestionButton\nimport React, { Component } from \"react\";\nimport QuizQuestionButton from \"./QuizQuestionButton.js\";\n\n/*\nButton Flow 2\n\nThe clickHandler prop in <QuizQuestionButton/> component below is bound the handleClick(buttonText)\nThe binding allows handleClick in QuizQuestionButton.js to pass an argument to clickHandler prop on this page\nand to have handleClick(buttonText) implement logic.\n\nThe logic: if button clicked equals the right answer, go to the method that handles showing the next question.\n\nGo to Quiz.js for part 3.\n*/\n\nclass QuizQuestion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incorrectAnswer: false,\n    };\n  }\n  render() {\n    {\n      /* RETURN REQUIRED */\n    }\n    return (\n      <>\n          <h3>Know the Lingo</h3>\n      <main className=\"app\">\n        {\" \"}\n       \n        {this.state.incorrectAnswer ? (\n          <p className=\"error\"> Sorry that's not right </p>\n        ) : null}\n        <section className=\"question-text\" >\n          <p>{this.props.quiz_question.instruction_text}</p>\n        </section>\n        <section className=\"buttons answer-section\">\n          <ul>\n            {/* When you call this on an array, you can have it run through all the items in that array \n          and do something interesting with them â€“ in our case, returning a new array of JSX that can \n          be drawn. \n          \n          For every item in the array, it gives us the item itself in person and \n          the position of the item in index.*/}\n            {this.props.quiz_question.answer_options.map(\n              (\n                answer_option,\n                index //creates a new anonymous function (that's the => part) that receives answer_option & index as a parameter and will return a value of the modified data.\n              ) => (\n                <QuizQuestionButton\n                  key={index}\n                  button_text={answer_option}\n                  clickHandler={this.handleClick.bind(this)}\n                />\n              )\n            )}{\" \"}\n            {/* React NEEDS a key attribute so that it knows which item is which. */}\n          </ul>\n        </section>\n      </main>\n      </>\n    );\n  }\n  handleClick(buttonText) {\n    if (buttonText == this.props.quiz_question.answer) {\n      this.setState({ incorrectAnswer: false });\n      this.props.showNextQuestionHandler();\n    } else {\n      this.setState({ incorrectAnswer: true });\n    }\n  }\n}\n\nexport default QuizQuestion;\n"]},"metadata":{},"sourceType":"module"}