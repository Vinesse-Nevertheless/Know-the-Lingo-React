{"ast":null,"code":"var _jsxFileName = \"/Users/vanessa/Desktop/GIT/React-QuizComponent/src/Quiz.js\";\n//Parent component to QuizQuestion.js and QuizEnd.js\nimport React, { Component } from \"react\";\nimport QuizQuestion from \"./QuizQuestion.js\";\nimport QuizEnd from \"./QuizEnd.js\"; //Get quiz question number, question text, answer options and correct answer from json file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet quizData = require(\"./quiz_data.json\");\n/*\nButton Flow 3\nshowQuestionHandler prop is in <QuizQuestion> component.\nBefore that code is run, an evaluation takes place to see if this is the last question in the quiz.\nIf it is the last question go to QuizEnd.js\n\nIf it's NOT the last question then showQuestionHandler prop is reached.\nshowQuestionHandler prop is bound to showQuestion()\n\nshowQuestion() changes the state of of the quiz question number--go from the current question to the next question\n*/\n//make data available in state for render\n\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quiz_position: 1\n    };\n  } //render quiz question\n\n\n  render() {\n    const isQuizEnd = this.state.quiz_position - 1 === quizData.quiz_questions.length; // const isQuizEnd = false\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuizQuestion\",\n      children: isQuizEnd ? /*#__PURE__*/_jsxDEV(QuizEnd, {\n        resetClickHandler: this.handleResetClick.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(QuizQuestion, {\n        quiz_question: quizData.quiz_questions[this.state.quiz_position - 1],\n        showNextQuestionHandler: this.showNextQuestion.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  showNextQuestion() {\n    this.setState({\n      quiz_position: this.state.quiz_position + 1\n    });\n  }\n\n  handleResetClick() {\n    this.props.resetClickHandler();\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/vanessa/Desktop/GIT/React-QuizComponent/src/Quiz.js"],"names":["React","Component","QuizQuestion","QuizEnd","quizData","require","Quiz","constructor","props","state","quiz_position","render","isQuizEnd","quiz_questions","length","handleResetClick","bind","showNextQuestion","setState","resetClickHandler"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,cAApB,C,CAEA;;;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,kBAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAC3BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD,GAN0B,CAQ3B;;;AACAC,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GACb,KAAKH,KAAL,CAAWC,aAAX,GAA2B,CAA3B,KAAiCN,QAAQ,CAACS,cAAT,CAAwBC,MAD3D,CADO,CAGP;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGF,SAAS,gBACR,QAAC,OAAD;AAAS,QAAA,iBAAiB,EAAE,KAAKG,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B;AAA5B;AAAA;AAAA;AAAA;AAAA,cADQ,gBAGR,QAAC,YAAD;AACE,QAAA,aAAa,EACXZ,QAAQ,CAACS,cAAT,CAAwB,KAAKJ,KAAL,CAAWC,aAAX,GAA2B,CAAnD,CAFJ;AAIE,QAAA,uBAAuB,EAAE,KAAKO,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B;AAJ3B;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AACDC,EAAAA,gBAAgB,GAAG;AACjB,SAAKC,QAAL,CAAc;AAAER,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,GAA2B;AAA5C,KAAd;AACD;;AACDK,EAAAA,gBAAgB,GAAG;AACjB,SAAKP,KAAL,CAAWW,iBAAX;AACD;;AAjC0B;;AAmC7B,eAAeb,IAAf","sourcesContent":["//Parent component to QuizQuestion.js and QuizEnd.js\n\nimport React, { Component } from \"react\";\nimport QuizQuestion from \"./QuizQuestion.js\";\nimport QuizEnd from \"./QuizEnd.js\";\n\n//Get quiz question number, question text, answer options and correct answer from json file\nlet quizData = require(\"./quiz_data.json\");\n\n/*\nButton Flow 3\nshowQuestionHandler prop is in <QuizQuestion> component.\nBefore that code is run, an evaluation takes place to see if this is the last question in the quiz.\nIf it is the last question go to QuizEnd.js\n\nIf it's NOT the last question then showQuestionHandler prop is reached.\nshowQuestionHandler prop is bound to showQuestion()\n\nshowQuestion() changes the state of of the quiz question number--go from the current question to the next question\n*/\n\n//make data available in state for render\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quiz_position: 1,\n    };\n  }\n\n  //render quiz question\n  render() {\n    const isQuizEnd =\n      this.state.quiz_position - 1 === quizData.quiz_questions.length;\n    // const isQuizEnd = false\n    return (\n      <div className=\"QuizQuestion\">\n        {isQuizEnd ? (\n          <QuizEnd resetClickHandler={this.handleResetClick.bind(this)} />\n        ) : (\n          <QuizQuestion\n            quiz_question={\n              quizData.quiz_questions[this.state.quiz_position - 1]\n            }\n            showNextQuestionHandler={this.showNextQuestion.bind(this)}\n          />\n        )}\n      </div>\n    );\n  }\n  showNextQuestion() {\n    this.setState({ quiz_position: this.state.quiz_position + 1 });\n  }\n  handleResetClick() {\n    this.props.resetClickHandler();\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}